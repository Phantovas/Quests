/**
  vars.h - header unit for quest Mediateka
 * @Author Vasiliy A. Ponomarjov November 13, 2015
 * @modified Vasiliy A. Ponomarjov November 16, 2015
 * @email vas@vingrad.ru
*/

/*************** ЗНАЧЕНИЯ ПЕРЕМЕННЫХ ******************************************/
#define TIME_BOUNCE_BTN          100           //время антидребезга кнопок в мс
#define DELAY_MP3_PLAY           50            //задержка на воспроизведение звука в мс
#define DELAY_BLINK              500           //длительность свечения света при моргании в мс
//управление фотоэлементом
#define DIGITAL_PHOTOCELL        0             //вход фотоэлемента: 0 - аналоговый, 1 - цифровой
#if !DIGITAL_PHOTOCELL
  #define SENSITIVITY            1000          //чувтствительность фотоэлемента
#endif
/******************************************************************************/

/***************НОМЕРА МЕЛОДИЙ*************************************************/
#define MP3_RING 1 //мелодия звонка телефона
#define MP3_TEXT 6 //мелодия текста
#define MP3_BUSY 3 //мелодия занятия телефона
#define MP3_BOX  4 //мелодия шкатулки
/******************************************************************************/

/******************** КОНТАКТЫ ************************************************/
//звук
#define BUSY 13 //LOW во время воспроизведения
#define S_RX 9 //RX for management player
#define S_TX  10 // TX for management player
//пин входных состояний
#define INDOOR_PIN 2 //пин для открытия двери
#define PHONE_PIN 3 //пин поднятия трубки
#define PHOTOCELL_PIN 14 //пин для подключения фотоэлемента
//пины кправления механизмами
#define LIGHTING_PIN 4 //пин освещения
#define MP_PIN 5 //пин для включения медиаплеера
#define TV_PIN 6 //пин для включения ТВ
#define BOX_PIN 7 //пин открытия шкатулки
#define OUTDOOR_PIN 8 //пин открытия первой двери

/************************ ВРЕМЕНА РАБОТЫ **************************************/
/* времена работы состояний по порядку
 * 0 - ожидание включения света (не привязано ко времени), 
 * 1 - время ожидания запуска медиаплеера,
 * 2 - время загрузки плеера,
 * 3 - включение ТВ и время показа ролика
 * 4 - режим звонка телефона (не привязано ко времени),
 * 5 - время моргания светом,
 * 6 - время промежутокв между миганиями освещением режим ожидания срабатываняи фотоэлемента
 * 7 - окончанме игры (не привязано ко времени)
 * в режимах не привязанных ко времени ставим ноль
 * {0, 120, 5, 105, 0, 20, 10, 0}  - времена режимов по тех заданию
*/
unsigned long timing[8] = {0, 120, 5, 105, 0, 20, 10, 0};
/******************************************************************************/

//плеер
SoftwareSerial mSerial(S_RX, S_TX);      //Инициализация софтверного сериала для управления звуком

//состояния игры (запуск, освещение, включение ТВ, звонок, моргание света, подсветка фотоэлемента, конец игры)
typedef enum {ST_WAIT, ST_LIGHTING, ST_MP_ON, ST_TV_ON, ST_PHONE, ST_LIGHT_BLINK, ST_PHOTOCELL, ST_GAME_OVER} TState; 
TState state;

//время запуска события
unsigned long start_time = 0;

//состояние света
bool lightState = false;
//время включения/отключения освещения
unsigned long lightOnOffTime = 0;
bool isBlinking = false;
unsigned long blink_period;

//антидребезг кнопок
Bounce phoneBtn; //кнопка поднятия телефонной трубки

//состояния телефона
enum {PN_RING, PN_PLAY, PN_BUSY} phoneState;
//текущая мелодия
unsigned int phoneMelody = MP3_RING;
